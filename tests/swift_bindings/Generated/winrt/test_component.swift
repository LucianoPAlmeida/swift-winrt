// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

import TestComponent_CWinRT

public class Simple: Equatable {
    internal var interface: ISimple

    public init() {
        try! interface = RoActivateInstance(HString("test_component.Simple"))
    }

    internal init(_ fromInterface: ISimple) {
        interface = fromInterface
    }

    public func Method() {
        try! interface.Method()
    }

    public func ReturnBlittableStruct() -> BlittableStruct {
        let result = try! interface.ReturnBlittableStruct()
        return unsafeBitCast(result, to: BlittableStruct.self) 
    }

    public func TakeBlittableStruct(_ value: BlittableStruct) {
        try! interface.TakeBlittableStruct(unsafeBitCast(value, to: __x_ABI_Ctest__component_CBlittableStruct.self))
    }

    public var BlittableStructProperty : BlittableStruct {
        get {
            let value = try! interface.get_BlittableStructProperty()
            return unsafeBitCast(value, to: BlittableStruct.self)
        }

        set {
            try! interface.put_BlittableStructProperty(unsafeBitCast(newValue, to: __x_ABI_Ctest__component_CBlittableStruct.self)) 
        }
    }

    public static func == (_ lhs: Simple, _ rhs: Simple) -> Bool {
        return lhs.interface == rhs.interface
    }
}

public struct BlittableStruct {
    public var First: Int32 = 0
    public var Second: Int32 = 0
    public init(First: Int32, Second: Int32) {
        self.First = First
        self.Second = Second
    }
}

