// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1


#pragma once
// Header files for imported files
#include "inspectable.h"
#include "AsyncInfo.h"
#include "EventToken.h"
#include "windowscontracts.h"
#include "Windows.Foundation.h"

/* Forward Declarations */
#ifndef ____x_ABI_Ctest__component_CIBasic_FWD_DEFINED__
#define ____x_ABI_Ctest__component_CIBasic_FWD_DEFINED__
    typedef interface __x_ABI_Ctest__component_CIBasic __x_ABI_Ctest__component_CIBasic;

#endif // ____x_ABI_Ctest__component_CIBasic_FWD_DEFINED__

#ifndef ____x_ABI_Ctest__component_CIClass_FWD_DEFINED__
#define ____x_ABI_Ctest__component_CIClass_FWD_DEFINED__
    typedef interface __x_ABI_Ctest__component_CIClass __x_ABI_Ctest__component_CIClass;

#endif // ____x_ABI_Ctest__component_CIClass_FWD_DEFINED__

#ifndef ____x_ABI_Ctest__component_CIClassFactory_FWD_DEFINED__
#define ____x_ABI_Ctest__component_CIClassFactory_FWD_DEFINED__
    typedef interface __x_ABI_Ctest__component_CIClassFactory __x_ABI_Ctest__component_CIClassFactory;

#endif // ____x_ABI_Ctest__component_CIClassFactory_FWD_DEFINED__

#ifndef ____x_ABI_Ctest__component_CIClassFactory2_FWD_DEFINED__
#define ____x_ABI_Ctest__component_CIClassFactory2_FWD_DEFINED__
    typedef interface __x_ABI_Ctest__component_CIClassFactory2 __x_ABI_Ctest__component_CIClassFactory2;

#endif // ____x_ABI_Ctest__component_CIClassFactory2_FWD_DEFINED__

#ifndef ____x_ABI_Ctest__component_CIClassStatics_FWD_DEFINED__
#define ____x_ABI_Ctest__component_CIClassStatics_FWD_DEFINED__
    typedef interface __x_ABI_Ctest__component_CIClassStatics __x_ABI_Ctest__component_CIClassStatics;

#endif // ____x_ABI_Ctest__component_CIClassStatics_FWD_DEFINED__

#ifndef ____x_ABI_Ctest__component_CIClassStatics2_FWD_DEFINED__
#define ____x_ABI_Ctest__component_CIClassStatics2_FWD_DEFINED__
    typedef interface __x_ABI_Ctest__component_CIClassStatics2 __x_ABI_Ctest__component_CIClassStatics2;

#endif // ____x_ABI_Ctest__component_CIClassStatics2_FWD_DEFINED__

#ifndef ____x_ABI_Ctest__component_CIIAmImplementable_FWD_DEFINED__
#define ____x_ABI_Ctest__component_CIIAmImplementable_FWD_DEFINED__
    typedef interface __x_ABI_Ctest__component_CIIAmImplementable __x_ABI_Ctest__component_CIIAmImplementable;

#endif // ____x_ABI_Ctest__component_CIIAmImplementable_FWD_DEFINED__

#ifndef ____x_ABI_Ctest__component_CISimple_FWD_DEFINED__
#define ____x_ABI_Ctest__component_CISimple_FWD_DEFINED__
    typedef interface __x_ABI_Ctest__component_CISimple __x_ABI_Ctest__component_CISimple;

#endif // ____x_ABI_Ctest__component_CISimple_FWD_DEFINED__

#ifndef ____x_ABI_Ctest__component_CISimpleDelegate_FWD_DEFINED__
#define ____x_ABI_Ctest__component_CISimpleDelegate_FWD_DEFINED__
    typedef interface __x_ABI_Ctest__component_CISimpleDelegate __x_ABI_Ctest__component_CISimpleDelegate;

#endif // ____x_ABI_Ctest__component_CISimpleDelegate_FWD_DEFINED__

#ifndef ____x_ABI_Ctest__component_CIStaticClassStatics_FWD_DEFINED__
#define ____x_ABI_Ctest__component_CIStaticClassStatics_FWD_DEFINED__
    typedef interface __x_ABI_Ctest__component_CIStaticClassStatics __x_ABI_Ctest__component_CIStaticClassStatics;

#endif // ____x_ABI_Ctest__component_CIStaticClassStatics_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef enum __x_ABI_Ctest__component_CFruit __x_ABI_Ctest__component_CFruit;

typedef enum __x_ABI_Ctest__component_CSigned __x_ABI_Ctest__component_CSigned;

typedef struct __x_ABI_Ctest__component_CBlittableStruct __x_ABI_Ctest__component_CBlittableStruct;

typedef struct __x_ABI_Ctest__component_CNonBlittableStruct __x_ABI_Ctest__component_CNonBlittableStruct;

enum __x_ABI_Ctest__component_CFruit
    {
        Fruit_Banana = 0,
    Fruit_Apple = 1,
    Fruit_Orange = 2,
    Fruit_Pineapple = 3,
};

enum __x_ABI_Ctest__component_CSigned
    {
        Signed_First = -1,
    Signed_Second = 0,
    Signed_Third = 1,
};

enum __x_ABI_Ctest__component_CUnsigned
    {
        Unsigned_First = 0,
    Unsigned_Second = 0x1,
    Unsigned_Third = 0x2,
};

struct __x_ABI_Ctest__component_CBlittableStruct
    {
        INT32 First;
    INT32 Second;
};

struct __x_ABI_Ctest__component_CNonBlittableBoolStruct
    {
        boolean First;
    boolean Second;
    boolean Third;
    boolean Fourth;
};

struct __x_ABI_Ctest__component_CNonBlittableStruct
    {
        HSTRING First;
    HSTRING Second;
    INT32 Third;
    HSTRING Fourth;
};

#if !defined(____x_ABI_Ctest__component_CIBasic_INTERFACE_DEFINED__)
    #define ____x_ABI_Ctest__component_CIBasic_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_test_component_IBasic[] = L"test_component.IBasic";
    typedef struct __x_ABI_Ctest__component_CIBasicVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_Ctest__component_CIBasic* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_Ctest__component_CIBasic* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_Ctest__component_CIBasic* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_Ctest__component_CIBasic* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_Ctest__component_CIBasic* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_Ctest__component_CIBasic* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Method)(__x_ABI_Ctest__component_CIBasic* This);

        END_INTERFACE
    } __x_ABI_Ctest__component_CIBasicVtbl;

    interface __x_ABI_Ctest__component_CIBasic
    {
        CONST_VTBL struct __x_ABI_Ctest__component_CIBasicVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_Ctest__component_CIBasic;
#endif /* !defined(____x_ABI_Ctest__component_CIBasic_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_Ctest__component_CIClass_INTERFACE_DEFINED__)
    #define ____x_ABI_Ctest__component_CIClass_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_test_component_IClass[] = L"test_component.IClass";
    typedef struct __x_ABI_Ctest__component_CIClassVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_Ctest__component_CIClass* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_Ctest__component_CIClass* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_Ctest__component_CIClass* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_Ctest__component_CIClass* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_Ctest__component_CIClass* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_Ctest__component_CIClass* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* SetDelegate)(__x_ABI_Ctest__component_CIClass* This,
        __x_ABI_Ctest__component_CISimpleDelegate* value);
    HRESULT (STDMETHODCALLTYPE* GetDelegate)(__x_ABI_Ctest__component_CIClass* This,
        __x_ABI_Ctest__component_CISimpleDelegate** result);
    HRESULT (STDMETHODCALLTYPE* InInt32)(__x_ABI_Ctest__component_CIClass* This,
        INT32 value,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* InString)(__x_ABI_Ctest__component_CIClass* This,
        HSTRING value,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* InEnum)(__x_ABI_Ctest__component_CIClass* This,
        enum __x_ABI_Ctest__component_CSigned value,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* OutInt32)(__x_ABI_Ctest__component_CIClass* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* OutString)(__x_ABI_Ctest__component_CIClass* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* OutBlittableStruct)(__x_ABI_Ctest__component_CIClass* This,
        struct __x_ABI_Ctest__component_CBlittableStruct* value);
    HRESULT (STDMETHODCALLTYPE* OutNonBlittableStruct)(__x_ABI_Ctest__component_CIClass* This,
        struct __x_ABI_Ctest__component_CNonBlittableStruct* value);
    HRESULT (STDMETHODCALLTYPE* OutEnum)(__x_ABI_Ctest__component_CIClass* This,
        enum __x_ABI_Ctest__component_CSigned* value);
    HRESULT (STDMETHODCALLTYPE* ReturnEnum)(__x_ABI_Ctest__component_CIClass* This,
        enum __x_ABI_Ctest__component_CSigned* result);
    HRESULT (STDMETHODCALLTYPE* get_EnumProperty)(__x_ABI_Ctest__component_CIClass* This,
        enum __x_ABI_Ctest__component_CFruit* value);
    HRESULT (STDMETHODCALLTYPE* put_EnumProperty)(__x_ABI_Ctest__component_CIClass* This,
        enum __x_ABI_Ctest__component_CFruit value);
    HRESULT (STDMETHODCALLTYPE* ReturnChar)(__x_ABI_Ctest__component_CIClass* This,
        WCHAR* result);
    HRESULT (STDMETHODCALLTYPE* InChar)(__x_ABI_Ctest__component_CIClass* This,
        WCHAR value,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* OutChar)(__x_ABI_Ctest__component_CIClass* This,
        WCHAR* value);

        END_INTERFACE
    } __x_ABI_Ctest__component_CIClassVtbl;

    interface __x_ABI_Ctest__component_CIClass
    {
        CONST_VTBL struct __x_ABI_Ctest__component_CIClassVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_Ctest__component_CIClass;
#endif /* !defined(____x_ABI_Ctest__component_CIClass_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_Ctest__component_CIClassFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_Ctest__component_CIClassFactory_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_test_component_IClassFactory[] = L"test_component.IClassFactory";
    typedef struct __x_ABI_Ctest__component_CIClassFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_Ctest__component_CIClassFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_Ctest__component_CIClassFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_Ctest__component_CIClassFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_Ctest__component_CIClassFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_Ctest__component_CIClassFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_Ctest__component_CIClassFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_Ctest__component_CIClassFactory* This,
        HSTRING name,
        __x_ABI_Ctest__component_CIClass** value);
    HRESULT (STDMETHODCALLTYPE* CreateInstance2)(__x_ABI_Ctest__component_CIClassFactory* This,
        HSTRING name,
        enum __x_ABI_Ctest__component_CFruit fruit,
        __x_ABI_Ctest__component_CIClass** value);

        END_INTERFACE
    } __x_ABI_Ctest__component_CIClassFactoryVtbl;

    interface __x_ABI_Ctest__component_CIClassFactory
    {
        CONST_VTBL struct __x_ABI_Ctest__component_CIClassFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_Ctest__component_CIClassFactory;
#endif /* !defined(____x_ABI_Ctest__component_CIClassFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_Ctest__component_CIClassFactory2_INTERFACE_DEFINED__)
    #define ____x_ABI_Ctest__component_CIClassFactory2_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_test_component_IClassFactory2[] = L"test_component.IClassFactory2";
    typedef struct __x_ABI_Ctest__component_CIClassFactory2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_Ctest__component_CIClassFactory2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_Ctest__component_CIClassFactory2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_Ctest__component_CIClassFactory2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_Ctest__component_CIClassFactory2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_Ctest__component_CIClassFactory2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_Ctest__component_CIClassFactory2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_Ctest__component_CIClassFactory2* This,
        HSTRING name,
        enum __x_ABI_Ctest__component_CFruit fruit,
        __x_ABI_Ctest__component_CIIAmImplementable* implementation,
        __x_ABI_Ctest__component_CIClass** value);

        END_INTERFACE
    } __x_ABI_Ctest__component_CIClassFactory2Vtbl;

    interface __x_ABI_Ctest__component_CIClassFactory2
    {
        CONST_VTBL struct __x_ABI_Ctest__component_CIClassFactory2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_Ctest__component_CIClassFactory2;
#endif /* !defined(____x_ABI_Ctest__component_CIClassFactory2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_Ctest__component_CIClassStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_Ctest__component_CIClassStatics_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_test_component_IClassStatics[] = L"test_component.IClassStatics";
    typedef struct __x_ABI_Ctest__component_CIClassStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_Ctest__component_CIClassStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_Ctest__component_CIClassStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_Ctest__component_CIClassStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_Ctest__component_CIClassStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_Ctest__component_CIClassStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_Ctest__component_CIClassStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* StaticTest)(__x_ABI_Ctest__component_CIClassStatics* This);
    HRESULT (STDMETHODCALLTYPE* StaticTestReturn)(__x_ABI_Ctest__component_CIClassStatics* This,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* get_StaticProperty)(__x_ABI_Ctest__component_CIClassStatics* This,
        INT32* value);

        END_INTERFACE
    } __x_ABI_Ctest__component_CIClassStaticsVtbl;

    interface __x_ABI_Ctest__component_CIClassStatics
    {
        CONST_VTBL struct __x_ABI_Ctest__component_CIClassStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_Ctest__component_CIClassStatics;
#endif /* !defined(____x_ABI_Ctest__component_CIClassStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_Ctest__component_CIClassStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_Ctest__component_CIClassStatics2_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_test_component_IClassStatics2[] = L"test_component.IClassStatics2";
    typedef struct __x_ABI_Ctest__component_CIClassStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_Ctest__component_CIClassStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_Ctest__component_CIClassStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_Ctest__component_CIClassStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_Ctest__component_CIClassStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_Ctest__component_CIClassStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_Ctest__component_CIClassStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* StaticTestReturnFloat)(__x_ABI_Ctest__component_CIClassStatics2* This,
        FLOAT* result);
    HRESULT (STDMETHODCALLTYPE* get_StaticPropertyFloat)(__x_ABI_Ctest__component_CIClassStatics2* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_StaticPropertyFloat)(__x_ABI_Ctest__component_CIClassStatics2* This,
        FLOAT value);

        END_INTERFACE
    } __x_ABI_Ctest__component_CIClassStatics2Vtbl;

    interface __x_ABI_Ctest__component_CIClassStatics2
    {
        CONST_VTBL struct __x_ABI_Ctest__component_CIClassStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_Ctest__component_CIClassStatics2;
#endif /* !defined(____x_ABI_Ctest__component_CIClassStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_Ctest__component_CIIAmImplementable_INTERFACE_DEFINED__)
    #define ____x_ABI_Ctest__component_CIIAmImplementable_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_test_component_IIAmImplementable[] = L"test_component.IIAmImplementable";
    typedef struct __x_ABI_Ctest__component_CIIAmImplementableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_Ctest__component_CIIAmImplementable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_Ctest__component_CIIAmImplementable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_Ctest__component_CIIAmImplementable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_Ctest__component_CIIAmImplementable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_Ctest__component_CIIAmImplementable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_Ctest__component_CIIAmImplementable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* InInt32)(__x_ABI_Ctest__component_CIIAmImplementable* This,
        INT32 value,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* InString)(__x_ABI_Ctest__component_CIIAmImplementable* This,
        HSTRING value,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* InEnum)(__x_ABI_Ctest__component_CIIAmImplementable* This,
        enum __x_ABI_Ctest__component_CSigned value,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* OutInt32)(__x_ABI_Ctest__component_CIIAmImplementable* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* OutString)(__x_ABI_Ctest__component_CIIAmImplementable* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* OutBlittableStruct)(__x_ABI_Ctest__component_CIIAmImplementable* This,
        struct __x_ABI_Ctest__component_CBlittableStruct* value);
    HRESULT (STDMETHODCALLTYPE* OutNonBlittableStruct)(__x_ABI_Ctest__component_CIIAmImplementable* This,
        struct __x_ABI_Ctest__component_CNonBlittableStruct* value);
    HRESULT (STDMETHODCALLTYPE* OutEnum)(__x_ABI_Ctest__component_CIIAmImplementable* This,
        enum __x_ABI_Ctest__component_CSigned* value);
    HRESULT (STDMETHODCALLTYPE* ReturnEnum)(__x_ABI_Ctest__component_CIIAmImplementable* This,
        enum __x_ABI_Ctest__component_CSigned* result);
    HRESULT (STDMETHODCALLTYPE* get_EnumProperty)(__x_ABI_Ctest__component_CIIAmImplementable* This,
        enum __x_ABI_Ctest__component_CFruit* value);
    HRESULT (STDMETHODCALLTYPE* put_EnumProperty)(__x_ABI_Ctest__component_CIIAmImplementable* This,
        enum __x_ABI_Ctest__component_CFruit value);

        END_INTERFACE
    } __x_ABI_Ctest__component_CIIAmImplementableVtbl;

    interface __x_ABI_Ctest__component_CIIAmImplementable
    {
        CONST_VTBL struct __x_ABI_Ctest__component_CIIAmImplementableVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_Ctest__component_CIIAmImplementable;
#endif /* !defined(____x_ABI_Ctest__component_CIIAmImplementable_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_Ctest__component_CISimple_INTERFACE_DEFINED__)
    #define ____x_ABI_Ctest__component_CISimple_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_test_component_ISimple[] = L"test_component.ISimple";
    typedef struct __x_ABI_Ctest__component_CISimpleVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_Ctest__component_CISimple* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_Ctest__component_CISimple* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_Ctest__component_CISimple* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_Ctest__component_CISimple* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_Ctest__component_CISimple* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_Ctest__component_CISimple* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Method)(__x_ABI_Ctest__component_CISimple* This);
    HRESULT (STDMETHODCALLTYPE* ReturnBlittableStruct)(__x_ABI_Ctest__component_CISimple* This,
        struct __x_ABI_Ctest__component_CBlittableStruct* result);
    HRESULT (STDMETHODCALLTYPE* TakeBlittableStruct)(__x_ABI_Ctest__component_CISimple* This,
        struct __x_ABI_Ctest__component_CBlittableStruct value);
    HRESULT (STDMETHODCALLTYPE* get_BlittableStructProperty)(__x_ABI_Ctest__component_CISimple* This,
        struct __x_ABI_Ctest__component_CBlittableStruct* value);
    HRESULT (STDMETHODCALLTYPE* put_BlittableStructProperty)(__x_ABI_Ctest__component_CISimple* This,
        struct __x_ABI_Ctest__component_CBlittableStruct value);
    HRESULT (STDMETHODCALLTYPE* ReturnNonBlittableStruct)(__x_ABI_Ctest__component_CISimple* This,
        struct __x_ABI_Ctest__component_CNonBlittableStruct* result);
    HRESULT (STDMETHODCALLTYPE* TakeNonBlittableStruct)(__x_ABI_Ctest__component_CISimple* This,
        struct __x_ABI_Ctest__component_CNonBlittableStruct value);
    HRESULT (STDMETHODCALLTYPE* get_NonBlittableStructProperty)(__x_ABI_Ctest__component_CISimple* This,
        struct __x_ABI_Ctest__component_CNonBlittableStruct* value);
    HRESULT (STDMETHODCALLTYPE* put_NonBlittableStructProperty)(__x_ABI_Ctest__component_CISimple* This,
        struct __x_ABI_Ctest__component_CNonBlittableStruct value);
    HRESULT (STDMETHODCALLTYPE* get_StringProperty)(__x_ABI_Ctest__component_CISimple* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_StringProperty)(__x_ABI_Ctest__component_CISimple* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_Ctest__component_CISimpleVtbl;

    interface __x_ABI_Ctest__component_CISimple
    {
        CONST_VTBL struct __x_ABI_Ctest__component_CISimpleVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_Ctest__component_CISimple;
#endif /* !defined(____x_ABI_Ctest__component_CISimple_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_Ctest__component_CISimpleDelegate_INTERFACE_DEFINED__)
    #define ____x_ABI_Ctest__component_CISimpleDelegate_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_test_component_ISimpleDelegate[] = L"test_component.ISimpleDelegate";
    typedef struct __x_ABI_Ctest__component_CISimpleDelegateVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_Ctest__component_CISimpleDelegate* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_Ctest__component_CISimpleDelegate* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_Ctest__component_CISimpleDelegate* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_Ctest__component_CISimpleDelegate* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_Ctest__component_CISimpleDelegate* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_Ctest__component_CISimpleDelegate* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* DoThis)(__x_ABI_Ctest__component_CISimpleDelegate* This);
    HRESULT (STDMETHODCALLTYPE* DoThat)(__x_ABI_Ctest__component_CISimpleDelegate* This,
        INT32 val);

        END_INTERFACE
    } __x_ABI_Ctest__component_CISimpleDelegateVtbl;

    interface __x_ABI_Ctest__component_CISimpleDelegate
    {
        CONST_VTBL struct __x_ABI_Ctest__component_CISimpleDelegateVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_Ctest__component_CISimpleDelegate;
#endif /* !defined(____x_ABI_Ctest__component_CISimpleDelegate_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_Ctest__component_CIStaticClassStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_Ctest__component_CIStaticClassStatics_INTERFACE_DEFINED__
    extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_test_component_IStaticClassStatics[] = L"test_component.IStaticClassStatics";
    typedef struct __x_ABI_Ctest__component_CIStaticClassStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_Ctest__component_CIStaticClassStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_Ctest__component_CIStaticClassStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_Ctest__component_CIStaticClassStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_Ctest__component_CIStaticClassStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_Ctest__component_CIStaticClassStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_Ctest__component_CIStaticClassStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_EnumProperty)(__x_ABI_Ctest__component_CIStaticClassStatics* This,
        enum __x_ABI_Ctest__component_CFruit* value);
    HRESULT (STDMETHODCALLTYPE* put_EnumProperty)(__x_ABI_Ctest__component_CIStaticClassStatics* This,
        enum __x_ABI_Ctest__component_CFruit value);
    HRESULT (STDMETHODCALLTYPE* InEnum)(__x_ABI_Ctest__component_CIStaticClassStatics* This,
        enum __x_ABI_Ctest__component_CSigned value,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* InNonBlittableStruct)(__x_ABI_Ctest__component_CIStaticClassStatics* This,
        struct __x_ABI_Ctest__component_CNonBlittableStruct value,
        HSTRING* result);

        END_INTERFACE
    } __x_ABI_Ctest__component_CIStaticClassStaticsVtbl;

    interface __x_ABI_Ctest__component_CIStaticClassStatics
    {
        CONST_VTBL struct __x_ABI_Ctest__component_CIStaticClassStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_Ctest__component_CIStaticClassStatics;
#endif /* !defined(____x_ABI_Ctest__component_CIStaticClassStatics_INTERFACE_DEFINED__) */
    
